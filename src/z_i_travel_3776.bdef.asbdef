managed;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for z_i_travel_3776 alias Travel
implementation in class zbp_i_travel_3776 unique
persistent table ztravel_3776
with additional save
etag master last_changed_at
lock master
//early numbering
authorization master ( instance )
//etag master <field_name>
{
  //standard operations for travel entity
  create;
  update;
  delete;
  // Administrative fields : read only
  field ( readonly ) last_changed_at, last_changed_by, created_at, created_by;
  //mandatory fields that are required to create a treavel
  field ( mandatory : create ) travel_id, agency_id, overall_status, booking_fee, currency_code;
  //dynamic field control
  field ( features : instance ) travel_id, overall_status;

  //validatiosn
  validation ValidateCustomer on save { create; field customer_id; }
  validation ValidateAgency on save { create; field agency_id; }
  validation ValidateDates on save { create; field begin_date, end_date; }
  validation ValidateStatus on save { create; field overall_status ; }

  //actions
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  action createTravelByTemplate result [1] $self;

  //create booking by association
  association _Booking { create ( features : instance ); }

  mapping
  for ztravel_3776 corresponding;
}

define behavior for z_i_booking_3776 alias Booking
implementation in class zbp_i_booking_3776 unique
persistent table zbooking_3776
lock dependent by _Travel
authorization dependent by _Travel
//early numbering
etag master last_changed_at
{
  field (readonly) travel_id;
  field (readonly : update ) booking_id;
  field (mandatory : create ) booking_id, carrier_id, connection_id, flight_date, booking_status;
  update;
  delete;

  //validations
  validation ValidateStatus on save { create; field booking_status; }

  //Determinations
  determination calculateTotalFlightPrice on modify {field flight_price, currency_code; }

  association _Travel {}
  association _BookingSupplement { create (features : instance); }

  mapping
  for zbooking_3776 corresponding;
}

define behavior for z_i_booksuppl_3776 alias Supplement
implementation in class zbp_i_bookingsuppl_3776 unique
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field (readonly) TravelId, BookingId;
  field (mandatory: create) BookingSupplementId ,SupplementId, Price;
  update;
  delete;

  //Determinations
  determination calculateTotalSupplPrice on modify {field price, Currency; }

  association _Travel;
  association _Booking;
}